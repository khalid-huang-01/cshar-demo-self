// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ProcessGrpcService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProcessService {

  /// <summary>Holder for reflection information generated from ProcessGrpcService.proto</summary>
  public static partial class ProcessGrpcServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for ProcessGrpcService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProcessGrpcServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm9jZXNzR3JwY1NlcnZpY2UucHJvdG8SDnByb2Nlc3NTZXJ2aWNlIhQK",
            "EkhlYWx0aENoZWNrUmVxdWVzdCIrChNIZWFsdGhDaGVja1Jlc3BvbnNlEhQK",
            "DGhlYWx0aFN0YXR1cxgBIAEoCCItCg9TZXNzaW9uUHJvcGVydHkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJIt8BCg1TZXJ2ZXJTZXNzaW9uEhcKD3Nl",
            "cnZlclNlc3Npb25JZBgBIAEoCRIPCgdmbGVldElkGAIgASgJEgwKBG5hbWUY",
            "AyABKAkSEgoKbWF4Q2xpZW50cxgEIAEoBRIQCghqb2luYWJsZRgFIAEoCBI6",
            "ChFzZXNzaW9uUHJvcGVydGllcxgGIAMoCzIfLnByb2Nlc3NTZXJ2aWNlLlNl",
            "c3Npb25Qcm9wZXJ0eRIMCgRwb3J0GAcgASgFEhEKCWlwQWRkcmVzcxgIIAEo",
            "CRITCgtzZXNzaW9uRGF0YRgJIAEoCSJRChlTdGFydFNlcnZlclNlc3Npb25S",
            "ZXF1ZXN0EjQKDXNlcnZlclNlc3Npb24YASABKAsyHS5wcm9jZXNzU2Vydmlj",
            "ZS5TZXJ2ZXJTZXNzaW9uIjIKF1Byb2Nlc3NUZXJtaW5hdGVSZXF1ZXN0EhcK",
            "D3Rlcm1pbmF0aW9uVGltZRgBIAEoAyIRCg9Qcm9jZXNzUmVzcG9uc2UyuwIK",
            "FVByb2Nlc3NHcnBjU2RrU2VydmljZRJaCg1PbkhlYWx0aENoZWNrEiIucHJv",
            "Y2Vzc1NlcnZpY2UuSGVhbHRoQ2hlY2tSZXF1ZXN0GiMucHJvY2Vzc1NlcnZp",
            "Y2UuSGVhbHRoQ2hlY2tSZXNwb25zZSIAEmQKFE9uU3RhcnRTZXJ2ZXJTZXNz",
            "aW9uEikucHJvY2Vzc1NlcnZpY2UuU3RhcnRTZXJ2ZXJTZXNzaW9uUmVxdWVz",
            "dBofLnByb2Nlc3NTZXJ2aWNlLlByb2Nlc3NSZXNwb25zZSIAEmAKEk9uUHJv",
            "Y2Vzc1Rlcm1pbmF0ZRInLnByb2Nlc3NTZXJ2aWNlLlByb2Nlc3NUZXJtaW5h",
            "dGVSZXF1ZXN0Gh8ucHJvY2Vzc1NlcnZpY2UuUHJvY2Vzc1Jlc3BvbnNlIgBi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.HealthCheckRequest), global::ProcessService.HealthCheckRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.HealthCheckResponse), global::ProcessService.HealthCheckResponse.Parser, new[]{ "HealthStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.SessionProperty), global::ProcessService.SessionProperty.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.ServerSession), global::ProcessService.ServerSession.Parser, new[]{ "ServerSessionId", "FleetId", "Name", "MaxClients", "Joinable", "SessionProperties", "Port", "IpAddress", "SessionData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.StartServerSessionRequest), global::ProcessService.StartServerSessionRequest.Parser, new[]{ "ServerSession" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.ProcessTerminateRequest), global::ProcessService.ProcessTerminateRequest.Parser, new[]{ "TerminationTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProcessService.ProcessResponse), global::ProcessService.ProcessResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HealthCheckRequest : pb::IMessage<HealthCheckRequest> {
    private static readonly pb::MessageParser<HealthCheckRequest> _parser = new pb::MessageParser<HealthCheckRequest>(() => new HealthCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest(HealthCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest Clone() {
      return new HealthCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HealthCheckResponse : pb::IMessage<HealthCheckResponse> {
    private static readonly pb::MessageParser<HealthCheckResponse> _parser = new pb::MessageParser<HealthCheckResponse>(() => new HealthCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse(HealthCheckResponse other) : this() {
      healthStatus_ = other.healthStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse Clone() {
      return new HealthCheckResponse(this);
    }

    /// <summary>Field number for the "healthStatus" field.</summary>
    public const int HealthStatusFieldNumber = 1;
    private bool healthStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HealthStatus {
      get { return healthStatus_; }
      set {
        healthStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HealthStatus != other.HealthStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HealthStatus != false) hash ^= HealthStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HealthStatus != false) {
        output.WriteRawTag(8);
        output.WriteBool(HealthStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HealthStatus != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.HealthStatus != false) {
        HealthStatus = other.HealthStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HealthStatus = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SessionProperty : pb::IMessage<SessionProperty> {
    private static readonly pb::MessageParser<SessionProperty> _parser = new pb::MessageParser<SessionProperty>(() => new SessionProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionProperty(SessionProperty other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionProperty Clone() {
      return new SessionProperty(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionProperty other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerSession : pb::IMessage<ServerSession> {
    private static readonly pb::MessageParser<ServerSession> _parser = new pb::MessageParser<ServerSession>(() => new ServerSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSession(ServerSession other) : this() {
      serverSessionId_ = other.serverSessionId_;
      fleetId_ = other.fleetId_;
      name_ = other.name_;
      maxClients_ = other.maxClients_;
      joinable_ = other.joinable_;
      sessionProperties_ = other.sessionProperties_.Clone();
      port_ = other.port_;
      ipAddress_ = other.ipAddress_;
      sessionData_ = other.sessionData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSession Clone() {
      return new ServerSession(this);
    }

    /// <summary>Field number for the "serverSessionId" field.</summary>
    public const int ServerSessionIdFieldNumber = 1;
    private string serverSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerSessionId {
      get { return serverSessionId_; }
      set {
        serverSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fleetId" field.</summary>
    public const int FleetIdFieldNumber = 2;
    private string fleetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FleetId {
      get { return fleetId_; }
      set {
        fleetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxClients" field.</summary>
    public const int MaxClientsFieldNumber = 4;
    private int maxClients_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxClients {
      get { return maxClients_; }
      set {
        maxClients_ = value;
      }
    }

    /// <summary>Field number for the "joinable" field.</summary>
    public const int JoinableFieldNumber = 5;
    private bool joinable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Joinable {
      get { return joinable_; }
      set {
        joinable_ = value;
      }
    }

    /// <summary>Field number for the "sessionProperties" field.</summary>
    public const int SessionPropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::ProcessService.SessionProperty> _repeated_sessionProperties_codec
        = pb::FieldCodec.ForMessage(50, global::ProcessService.SessionProperty.Parser);
    private readonly pbc::RepeatedField<global::ProcessService.SessionProperty> sessionProperties_ = new pbc::RepeatedField<global::ProcessService.SessionProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProcessService.SessionProperty> SessionProperties {
      get { return sessionProperties_; }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 7;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ipAddress" field.</summary>
    public const int IpAddressFieldNumber = 8;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionData" field.</summary>
    public const int SessionDataFieldNumber = 9;
    private string sessionData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionData {
      get { return sessionData_; }
      set {
        sessionData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerSessionId != other.ServerSessionId) return false;
      if (FleetId != other.FleetId) return false;
      if (Name != other.Name) return false;
      if (MaxClients != other.MaxClients) return false;
      if (Joinable != other.Joinable) return false;
      if(!sessionProperties_.Equals(other.sessionProperties_)) return false;
      if (Port != other.Port) return false;
      if (IpAddress != other.IpAddress) return false;
      if (SessionData != other.SessionData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerSessionId.Length != 0) hash ^= ServerSessionId.GetHashCode();
      if (FleetId.Length != 0) hash ^= FleetId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaxClients != 0) hash ^= MaxClients.GetHashCode();
      if (Joinable != false) hash ^= Joinable.GetHashCode();
      hash ^= sessionProperties_.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (SessionData.Length != 0) hash ^= SessionData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerSessionId);
      }
      if (FleetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FleetId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (MaxClients != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxClients);
      }
      if (Joinable != false) {
        output.WriteRawTag(40);
        output.WriteBool(Joinable);
      }
      sessionProperties_.WriteTo(output, _repeated_sessionProperties_codec);
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IpAddress);
      }
      if (SessionData.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SessionData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerSessionId);
      }
      if (FleetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FleetId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaxClients != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxClients);
      }
      if (Joinable != false) {
        size += 1 + 1;
      }
      size += sessionProperties_.CalculateSize(_repeated_sessionProperties_codec);
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (SessionData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerSession other) {
      if (other == null) {
        return;
      }
      if (other.ServerSessionId.Length != 0) {
        ServerSessionId = other.ServerSessionId;
      }
      if (other.FleetId.Length != 0) {
        FleetId = other.FleetId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaxClients != 0) {
        MaxClients = other.MaxClients;
      }
      if (other.Joinable != false) {
        Joinable = other.Joinable;
      }
      sessionProperties_.Add(other.sessionProperties_);
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.SessionData.Length != 0) {
        SessionData = other.SessionData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            FleetId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            MaxClients = input.ReadInt32();
            break;
          }
          case 40: {
            Joinable = input.ReadBool();
            break;
          }
          case 50: {
            sessionProperties_.AddEntriesFrom(input, _repeated_sessionProperties_codec);
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
          case 66: {
            IpAddress = input.ReadString();
            break;
          }
          case 74: {
            SessionData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartServerSessionRequest : pb::IMessage<StartServerSessionRequest> {
    private static readonly pb::MessageParser<StartServerSessionRequest> _parser = new pb::MessageParser<StartServerSessionRequest>(() => new StartServerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartServerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartServerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartServerSessionRequest(StartServerSessionRequest other) : this() {
      serverSession_ = other.serverSession_ != null ? other.serverSession_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartServerSessionRequest Clone() {
      return new StartServerSessionRequest(this);
    }

    /// <summary>Field number for the "serverSession" field.</summary>
    public const int ServerSessionFieldNumber = 1;
    private global::ProcessService.ServerSession serverSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProcessService.ServerSession ServerSession {
      get { return serverSession_; }
      set {
        serverSession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartServerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartServerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ServerSession, other.ServerSession)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serverSession_ != null) hash ^= ServerSession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serverSession_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ServerSession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serverSession_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerSession);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartServerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.serverSession_ != null) {
        if (serverSession_ == null) {
          ServerSession = new global::ProcessService.ServerSession();
        }
        ServerSession.MergeFrom(other.ServerSession);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (serverSession_ == null) {
              ServerSession = new global::ProcessService.ServerSession();
            }
            input.ReadMessage(ServerSession);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessTerminateRequest : pb::IMessage<ProcessTerminateRequest> {
    private static readonly pb::MessageParser<ProcessTerminateRequest> _parser = new pb::MessageParser<ProcessTerminateRequest>(() => new ProcessTerminateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessTerminateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest(ProcessTerminateRequest other) : this() {
      terminationTime_ = other.terminationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest Clone() {
      return new ProcessTerminateRequest(this);
    }

    /// <summary>Field number for the "terminationTime" field.</summary>
    public const int TerminationTimeFieldNumber = 1;
    private long terminationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TerminationTime {
      get { return terminationTime_; }
      set {
        terminationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessTerminateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessTerminateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TerminationTime != other.TerminationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TerminationTime != 0L) hash ^= TerminationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TerminationTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TerminationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TerminationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TerminationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessTerminateRequest other) {
      if (other == null) {
        return;
      }
      if (other.TerminationTime != 0L) {
        TerminationTime = other.TerminationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TerminationTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessResponse : pb::IMessage<ProcessResponse> {
    private static readonly pb::MessageParser<ProcessResponse> _parser = new pb::MessageParser<ProcessResponse>(() => new ProcessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProcessService.ProcessGrpcServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessResponse(ProcessResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessResponse Clone() {
      return new ProcessResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
